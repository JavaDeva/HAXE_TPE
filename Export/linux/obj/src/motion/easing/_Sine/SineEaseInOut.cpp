// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_motion_easing_IEasing
#include <motion/easing/IEasing.h>
#endif
#ifndef INCLUDED_motion_easing__Sine_SineEaseInOut
#include <motion/easing/_Sine/SineEaseInOut.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_708323df14c56268_49_new,"motion.easing._Sine.SineEaseInOut","new",0x66aeea73,"motion.easing._Sine.SineEaseInOut.new","motion/easing/Sine.hx",49,0xc8f9a0c6)
HX_LOCAL_STACK_FRAME(_hx_pos_708323df14c56268_58_calculate,"motion.easing._Sine.SineEaseInOut","calculate",0x662cffb9,"motion.easing._Sine.SineEaseInOut.calculate","motion/easing/Sine.hx",58,0xc8f9a0c6)
HX_LOCAL_STACK_FRAME(_hx_pos_708323df14c56268_65_ease,"motion.easing._Sine.SineEaseInOut","ease",0x6c68427b,"motion.easing._Sine.SineEaseInOut.ease","motion/easing/Sine.hx",65,0xc8f9a0c6)
namespace motion{
namespace easing{
namespace _Sine{

void SineEaseInOut_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_708323df14c56268_49_new)
            	}

Dynamic SineEaseInOut_obj::__CreateEmpty() { return new SineEaseInOut_obj; }

void *SineEaseInOut_obj::_hx_vtable = 0;

Dynamic SineEaseInOut_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< SineEaseInOut_obj > _hx_result = new SineEaseInOut_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SineEaseInOut_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6f719503;
}

static ::motion::easing::IEasing_obj _hx_motion_easing__Sine_SineEaseInOut__hx_motion_easing_IEasing= {
	( Float (::hx::Object::*)(Float))&::motion::easing::_Sine::SineEaseInOut_obj::calculate,
	( Float (::hx::Object::*)(Float,Float,Float,Float))&::motion::easing::_Sine::SineEaseInOut_obj::ease,
};

void *SineEaseInOut_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x864e8b53: return &_hx_motion_easing__Sine_SineEaseInOut__hx_motion_easing_IEasing;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

Float SineEaseInOut_obj::calculate(Float k){
            	HX_STACKFRAME(&_hx_pos_708323df14c56268_58_calculate)
HXDLIN(  58)		return (-((::Math_obj::cos((::Math_obj::PI * k)) - ( (Float)(1) ))) / ( (Float)(2) ));
            	}


HX_DEFINE_DYNAMIC_FUNC1(SineEaseInOut_obj,calculate,return )

Float SineEaseInOut_obj::ease(Float t,Float b,Float c,Float d){
            	HX_STACKFRAME(&_hx_pos_708323df14c56268_65_ease)
HXDLIN(  65)		return (((-(c) / ( (Float)(2) )) * (::Math_obj::cos(((::Math_obj::PI * t) / d)) - ( (Float)(1) ))) + b);
            	}


HX_DEFINE_DYNAMIC_FUNC4(SineEaseInOut_obj,ease,return )


::hx::ObjectPtr< SineEaseInOut_obj > SineEaseInOut_obj::__new() {
	::hx::ObjectPtr< SineEaseInOut_obj > __this = new SineEaseInOut_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< SineEaseInOut_obj > SineEaseInOut_obj::__alloc(::hx::Ctx *_hx_ctx) {
	SineEaseInOut_obj *__this = (SineEaseInOut_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(SineEaseInOut_obj), false, "motion.easing._Sine.SineEaseInOut"));
	*(void **)__this = SineEaseInOut_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

SineEaseInOut_obj::SineEaseInOut_obj()
{
}

::hx::Val SineEaseInOut_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"ease") ) { return ::hx::Val( ease_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"calculate") ) { return ::hx::Val( calculate_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *SineEaseInOut_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *SineEaseInOut_obj_sStaticStorageInfo = 0;
#endif

static ::String SineEaseInOut_obj_sMemberFields[] = {
	HX_("calculate",66,95,6a,05),
	HX_("ease",ee,8b,0c,43),
	::String(null()) };

::hx::Class SineEaseInOut_obj::__mClass;

void SineEaseInOut_obj::__register()
{
	SineEaseInOut_obj _hx_dummy;
	SineEaseInOut_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("motion.easing._Sine.SineEaseInOut",01,35,ce,f8);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(SineEaseInOut_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< SineEaseInOut_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SineEaseInOut_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SineEaseInOut_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace motion
} // end namespace easing
} // end namespace _Sine
