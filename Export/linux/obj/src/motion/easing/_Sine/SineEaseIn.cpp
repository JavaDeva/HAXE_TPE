// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_motion_easing_IEasing
#include <motion/easing/IEasing.h>
#endif
#ifndef INCLUDED_motion_easing__Sine_SineEaseIn
#include <motion/easing/_Sine/SineEaseIn.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_aeb255baf67ac512_22_new,"motion.easing._Sine.SineEaseIn","new",0xa5cac4ff,"motion.easing._Sine.SineEaseIn.new","motion/easing/Sine.hx",22,0xc8f9a0c6)
HX_LOCAL_STACK_FRAME(_hx_pos_aeb255baf67ac512_31_calculate,"motion.easing._Sine.SineEaseIn","calculate",0x70654b45,"motion.easing._Sine.SineEaseIn.calculate","motion/easing/Sine.hx",31,0xc8f9a0c6)
HX_LOCAL_STACK_FRAME(_hx_pos_aeb255baf67ac512_38_ease,"motion.easing._Sine.SineEaseIn","ease",0x65aba26f,"motion.easing._Sine.SineEaseIn.ease","motion/easing/Sine.hx",38,0xc8f9a0c6)
namespace motion{
namespace easing{
namespace _Sine{

void SineEaseIn_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_aeb255baf67ac512_22_new)
            	}

Dynamic SineEaseIn_obj::__CreateEmpty() { return new SineEaseIn_obj; }

void *SineEaseIn_obj::_hx_vtable = 0;

Dynamic SineEaseIn_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< SineEaseIn_obj > _hx_result = new SineEaseIn_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SineEaseIn_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x34c6169f;
}

static ::motion::easing::IEasing_obj _hx_motion_easing__Sine_SineEaseIn__hx_motion_easing_IEasing= {
	( Float (::hx::Object::*)(Float))&::motion::easing::_Sine::SineEaseIn_obj::calculate,
	( Float (::hx::Object::*)(Float,Float,Float,Float))&::motion::easing::_Sine::SineEaseIn_obj::ease,
};

void *SineEaseIn_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x864e8b53: return &_hx_motion_easing__Sine_SineEaseIn__hx_motion_easing_IEasing;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

Float SineEaseIn_obj::calculate(Float k){
            	HX_STACKFRAME(&_hx_pos_aeb255baf67ac512_31_calculate)
HXDLIN(  31)		return (( (Float)(1) ) - ::Math_obj::cos((k * (::Math_obj::PI / ( (Float)(2) )))));
            	}


HX_DEFINE_DYNAMIC_FUNC1(SineEaseIn_obj,calculate,return )

Float SineEaseIn_obj::ease(Float t,Float b,Float c,Float d){
            	HX_STACKFRAME(&_hx_pos_aeb255baf67ac512_38_ease)
HXDLIN(  38)		return (((-(c) * ::Math_obj::cos(((t / d) * (::Math_obj::PI / ( (Float)(2) ))))) + c) + b);
            	}


HX_DEFINE_DYNAMIC_FUNC4(SineEaseIn_obj,ease,return )


::hx::ObjectPtr< SineEaseIn_obj > SineEaseIn_obj::__new() {
	::hx::ObjectPtr< SineEaseIn_obj > __this = new SineEaseIn_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< SineEaseIn_obj > SineEaseIn_obj::__alloc(::hx::Ctx *_hx_ctx) {
	SineEaseIn_obj *__this = (SineEaseIn_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(SineEaseIn_obj), false, "motion.easing._Sine.SineEaseIn"));
	*(void **)__this = SineEaseIn_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

SineEaseIn_obj::SineEaseIn_obj()
{
}

::hx::Val SineEaseIn_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"ease") ) { return ::hx::Val( ease_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"calculate") ) { return ::hx::Val( calculate_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *SineEaseIn_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *SineEaseIn_obj_sStaticStorageInfo = 0;
#endif

static ::String SineEaseIn_obj_sMemberFields[] = {
	HX_("calculate",66,95,6a,05),
	HX_("ease",ee,8b,0c,43),
	::String(null()) };

::hx::Class SineEaseIn_obj::__mClass;

void SineEaseIn_obj::__register()
{
	SineEaseIn_obj _hx_dummy;
	SineEaseIn_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("motion.easing._Sine.SineEaseIn",8d,d9,ae,74);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(SineEaseIn_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< SineEaseIn_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SineEaseIn_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SineEaseIn_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace motion
} // end namespace easing
} // end namespace _Sine
