// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_ru_stablex_TweenSprite
#include <ru/stablex/TweenSprite.h>
#endif
#ifndef INCLUDED_ru_stablex_ui_widgets_Box
#include <ru/stablex/ui/widgets/Box.h>
#endif
#ifndef INCLUDED_ru_stablex_ui_widgets_VBox
#include <ru/stablex/ui/widgets/VBox.h>
#endif
#ifndef INCLUDED_ru_stablex_ui_widgets_Widget
#include <ru/stablex/ui/widgets/Widget.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ae5082004a4adfd6_6_new,"ru.stablex.ui.widgets.VBox","new",0x105a6184,"ru.stablex.ui.widgets.VBox.new","ru/stablex/ui/widgets/VBox.hx",6,0x5039a72c)
namespace ru{
namespace stablex{
namespace ui{
namespace widgets{

void VBox_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_ae5082004a4adfd6_6_new)
HXDLIN(   6)		super::__construct();
            	}

Dynamic VBox_obj::__CreateEmpty() { return new VBox_obj; }

void *VBox_obj::_hx_vtable = 0;

Dynamic VBox_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< VBox_obj > _hx_result = new VBox_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool VBox_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2383f585) {
		if (inClassId<=(int)0x1210c5aa) {
			if (inClassId<=(int)0x0c89e854) {
				if (inClassId<=(int)0x0330636f) {
					return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
				} else {
					return inClassId==(int)0x0c89e854;
				}
			} else {
				return inClassId==(int)0x1210c5aa;
			}
		} else {
			return inClassId==(int)0x1f4df417 || inClassId==(int)0x2383f585;
		}
	} else {
		if (inClassId<=(int)0x5bca677e) {
			if (inClassId<=(int)0x4af7dd8e) {
				return inClassId==(int)0x270e5222 || inClassId==(int)0x4af7dd8e;
			} else {
				return inClassId==(int)0x5bca677e;
			}
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}


::hx::ObjectPtr< VBox_obj > VBox_obj::__new() {
	::hx::ObjectPtr< VBox_obj > __this = new VBox_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< VBox_obj > VBox_obj::__alloc(::hx::Ctx *_hx_ctx) {
	VBox_obj *__this = (VBox_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(VBox_obj), true, "ru.stablex.ui.widgets.VBox"));
	*(void **)__this = VBox_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

VBox_obj::VBox_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *VBox_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *VBox_obj_sStaticStorageInfo = 0;
#endif

::hx::Class VBox_obj::__mClass;

void VBox_obj::__register()
{
	VBox_obj _hx_dummy;
	VBox_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ru.stablex.ui.widgets.VBox",92,8f,2a,b7);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< VBox_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = VBox_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = VBox_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ru
} // end namespace stablex
} // end namespace ui
} // end namespace widgets
