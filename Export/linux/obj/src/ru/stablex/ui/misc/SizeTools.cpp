// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif
#ifndef INCLUDED_ru_stablex_TweenSprite
#include <ru/stablex/TweenSprite.h>
#endif
#ifndef INCLUDED_ru_stablex_ui_misc_SizeTools
#include <ru/stablex/ui/misc/SizeTools.h>
#endif
#ifndef INCLUDED_ru_stablex_ui_widgets_Widget
#include <ru/stablex/ui/widgets/Widget.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_13d6f84217a0736b_21_width,"ru.stablex.ui.misc.SizeTools","width",0xb8cc602e,"ru.stablex.ui.misc.SizeTools.width","ru/stablex/ui/misc/SizeTools.hx",21,0x410f6a4a)
HX_LOCAL_STACK_FRAME(_hx_pos_13d6f84217a0736b_36_height,"ru.stablex.ui.misc.SizeTools","height",0xb05740bf,"ru.stablex.ui.misc.SizeTools.height","ru/stablex/ui/misc/SizeTools.hx",36,0x410f6a4a)
HX_LOCAL_STACK_FRAME(_hx_pos_13d6f84217a0736b_54_setX,"ru.stablex.ui.misc.SizeTools","setX",0x1adf654e,"ru.stablex.ui.misc.SizeTools.setX","ru/stablex/ui/misc/SizeTools.hx",54,0x410f6a4a)
HX_LOCAL_STACK_FRAME(_hx_pos_13d6f84217a0736b_67_setY,"ru.stablex.ui.misc.SizeTools","setY",0x1adf654f,"ru.stablex.ui.misc.SizeTools.setY","ru/stablex/ui/misc/SizeTools.hx",67,0x410f6a4a)
namespace ru{
namespace stablex{
namespace ui{
namespace misc{

void SizeTools_obj::__construct() { }

Dynamic SizeTools_obj::__CreateEmpty() { return new SizeTools_obj; }

void *SizeTools_obj::_hx_vtable = 0;

Dynamic SizeTools_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< SizeTools_obj > _hx_result = new SizeTools_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SizeTools_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3b120300;
}

Float SizeTools_obj::width( ::openfl::display::DisplayObject obj){
            	HX_STACKFRAME(&_hx_pos_13d6f84217a0736b_21_width)
HXDLIN(  21)		if (::Std_obj::isOfType(obj,( ( ::Dynamic)(::hx::ClassOf< ::ru::stablex::ui::widgets::Widget >()) ))) {
HXLINE(  22)			return ::hx::TCast<  ::ru::stablex::ui::widgets::Widget >::cast(obj)->get_w();
            		}
            		else {
HXLINE(  23)			if (::Std_obj::isOfType(obj,( ( ::Dynamic)(::hx::ClassOf< ::openfl::text::TextField >()) ))) {
HXLINE(  24)				return (::hx::TCast<  ::openfl::text::TextField >::cast(obj)->get_textWidth() + 4);
            			}
            			else {
HXLINE(  26)				return obj->get_width();
            			}
            		}
HXLINE(  21)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(SizeTools_obj,width,return )

Float SizeTools_obj::height( ::openfl::display::DisplayObject obj){
            	HX_STACKFRAME(&_hx_pos_13d6f84217a0736b_36_height)
HXDLIN(  36)		if (::Std_obj::isOfType(obj,( ( ::Dynamic)(::hx::ClassOf< ::ru::stablex::ui::widgets::Widget >()) ))) {
HXLINE(  37)			return ::hx::TCast<  ::ru::stablex::ui::widgets::Widget >::cast(obj)->get_h();
            		}
            		else {
HXLINE(  38)			if (::Std_obj::isOfType(obj,( ( ::Dynamic)(::hx::ClassOf< ::openfl::text::TextField >()) ))) {
HXLINE(  39)				return (::hx::TCast<  ::openfl::text::TextField >::cast(obj)->get_textHeight() + 4);
            			}
            			else {
HXLINE(  41)				return obj->get_height();
            			}
            		}
HXLINE(  36)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(SizeTools_obj,height,return )

void SizeTools_obj::setX( ::openfl::display::DisplayObject obj,Float x){
            	HX_STACKFRAME(&_hx_pos_13d6f84217a0736b_54_setX)
HXDLIN(  54)		obj->set_x(x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(SizeTools_obj,setX,(void))

void SizeTools_obj::setY( ::openfl::display::DisplayObject obj,Float y){
            	HX_STACKFRAME(&_hx_pos_13d6f84217a0736b_67_setY)
HXDLIN(  67)		obj->set_y(y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(SizeTools_obj,setY,(void))


SizeTools_obj::SizeTools_obj()
{
}

bool SizeTools_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"setX") ) { outValue = setX_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setY") ) { outValue = setY_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"width") ) { outValue = width_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"height") ) { outValue = height_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *SizeTools_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *SizeTools_obj_sStaticStorageInfo = 0;
#endif

::hx::Class SizeTools_obj::__mClass;

static ::String SizeTools_obj_sStaticFields[] = {
	HX_("width",06,b6,62,ca),
	HX_("height",e7,07,4c,02),
	HX_("setX",76,92,50,4c),
	HX_("setY",77,92,50,4c),
	::String(null())
};

void SizeTools_obj::__register()
{
	SizeTools_obj _hx_dummy;
	SizeTools_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ru.stablex.ui.misc.SizeTools",96,7c,66,f6);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &SizeTools_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(SizeTools_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< SizeTools_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SizeTools_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SizeTools_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ru
} // end namespace stablex
} // end namespace ui
} // end namespace misc
