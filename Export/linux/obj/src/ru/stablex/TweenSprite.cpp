// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_List
#include <haxe/ds/List.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_ds__List_ListNode
#include <haxe/ds/_List/ListNode.h>
#endif
#ifndef INCLUDED_motion_Actuate
#include <motion/Actuate.h>
#endif
#ifndef INCLUDED_motion_actuators_GenericActuator
#include <motion/actuators/GenericActuator.h>
#endif
#ifndef INCLUDED_motion_actuators_IGenericActuator
#include <motion/actuators/IGenericActuator.h>
#endif
#ifndef INCLUDED_motion_easing_Back
#include <motion/easing/Back.h>
#endif
#ifndef INCLUDED_motion_easing_Bounce
#include <motion/easing/Bounce.h>
#endif
#ifndef INCLUDED_motion_easing_Cubic
#include <motion/easing/Cubic.h>
#endif
#ifndef INCLUDED_motion_easing_Elastic
#include <motion/easing/Elastic.h>
#endif
#ifndef INCLUDED_motion_easing_Expo
#include <motion/easing/Expo.h>
#endif
#ifndef INCLUDED_motion_easing_IEasing
#include <motion/easing/IEasing.h>
#endif
#ifndef INCLUDED_motion_easing_Linear
#include <motion/easing/Linear.h>
#endif
#ifndef INCLUDED_motion_easing_Quad
#include <motion/easing/Quad.h>
#endif
#ifndef INCLUDED_motion_easing_Quart
#include <motion/easing/Quart.h>
#endif
#ifndef INCLUDED_motion_easing_Quint
#include <motion/easing/Quint.h>
#endif
#ifndef INCLUDED_motion_easing_Sine
#include <motion/easing/Sine.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_ru_stablex_TweenSprite
#include <ru/stablex/TweenSprite.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c8af1e38a9791aa8_25_new,"ru.stablex.TweenSprite","new",0xc43762e6,"ru.stablex.TweenSprite.new","ru/stablex/TweenSprite.hx",25,0x04d763cc)
HX_LOCAL_STACK_FRAME(_hx_pos_c8af1e38a9791aa8_39_addEventListener,"ru.stablex.TweenSprite","addEventListener",0xfbe6dd87,"ru.stablex.TweenSprite.addEventListener","ru/stablex/TweenSprite.hx",39,0x04d763cc)
HX_LOCAL_STACK_FRAME(_hx_pos_c8af1e38a9791aa8_72_addUniqueListener,"ru.stablex.TweenSprite","addUniqueListener",0x6a9097ac,"ru.stablex.TweenSprite.addUniqueListener","ru/stablex/TweenSprite.hx",72,0x04d763cc)
HX_LOCAL_STACK_FRAME(_hx_pos_c8af1e38a9791aa8_86_removeEventListener,"ru.stablex.TweenSprite","removeEventListener",0xe8bd0650,"ru.stablex.TweenSprite.removeEventListener","ru/stablex/TweenSprite.hx",86,0x04d763cc)
HX_LOCAL_STACK_FRAME(_hx_pos_c8af1e38a9791aa8_101_clearEvent,"ru.stablex.TweenSprite","clearEvent",0xcec97187,"ru.stablex.TweenSprite.clearEvent","ru/stablex/TweenSprite.hx",101,0x04d763cc)
HX_LOCAL_STACK_FRAME(_hx_pos_c8af1e38a9791aa8_116_hasListener,"ru.stablex.TweenSprite","hasListener",0x020b6e74,"ru.stablex.TweenSprite.hasListener","ru/stablex/TweenSprite.hx",116,0x04d763cc)
HX_LOCAL_STACK_FRAME(_hx_pos_c8af1e38a9791aa8_136_tween,"ru.stablex.TweenSprite","tween",0x4b426a71,"ru.stablex.TweenSprite.tween","ru/stablex/TweenSprite.hx",136,0x04d763cc)
HX_LOCAL_STACK_FRAME(_hx_pos_c8af1e38a9791aa8_176_tweenStop,"ru.stablex.TweenSprite","tweenStop",0xd53c1313,"ru.stablex.TweenSprite.tweenStop","ru/stablex/TweenSprite.hx",176,0x04d763cc)
HX_LOCAL_STACK_FRAME(_hx_pos_c8af1e38a9791aa8_184_free,"ru.stablex.TweenSprite","free",0xe6ff3f66,"ru.stablex.TweenSprite.free","ru/stablex/TweenSprite.hx",184,0x04d763cc)
HX_LOCAL_STACK_FRAME(_hx_pos_c8af1e38a9791aa8_210_freeChildren,"ru.stablex.TweenSprite","freeChildren",0x3d21eac5,"ru.stablex.TweenSprite.freeChildren","ru/stablex/TweenSprite.hx",210,0x04d763cc)
namespace ru{
namespace stablex{

void TweenSprite_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_c8af1e38a9791aa8_25_new)
HXDLIN(  25)		super::__construct();
            	}

Dynamic TweenSprite_obj::__CreateEmpty() { return new TweenSprite_obj; }

void *TweenSprite_obj::_hx_vtable = 0;

Dynamic TweenSprite_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TweenSprite_obj > _hx_result = new TweenSprite_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TweenSprite_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x1f4df417;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x270e5222 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void TweenSprite_obj::addEventListener(::String _tmp_type, ::Dynamic _tmp_listener,::hx::Null< bool >  __o_useCapture,::hx::Null< int >  __o_priority,::hx::Null< bool >  __o_useWeakReference){
            		bool useCapture = __o_useCapture.Default(false);
            		int priority = __o_priority.Default(0);
            		bool useWeakReference = __o_useWeakReference.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_c8af1e38a9791aa8_39_addEventListener)
HXLINE(  41)		::String type = _tmp_type;
HXDLIN(  41)		 ::Dynamic listener = _tmp_listener;
HXDLIN(  41)		if (::hx::IsNull( this->_listeners )) {
HXLINE(  43)			this->_listeners =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            		}
HXLINE(  49)		 ::haxe::ds::List listeners = ( ( ::haxe::ds::List)(this->_listeners->get(type)) );
HXLINE(  52)		if (::hx::IsNull( listeners )) {
HXLINE(  53)			listeners =  ::haxe::ds::List_obj::__alloc( HX_CTX );
HXLINE(  54)			listeners->add(listener);
HXLINE(  55)			this->_listeners->set(type,listeners);
            		}
            		else {
HXLINE(  59)			listeners->add(listener);
            		}
HXLINE(  62)		this->super::addEventListener(type,listener,false,priority,useWeakReference);
            	}


bool TweenSprite_obj::addUniqueListener(::String type, ::Dynamic listener,::hx::Null< bool >  __o_useCapture,::hx::Null< int >  __o_priority,::hx::Null< bool >  __o_useWeakReference){
            		bool useCapture = __o_useCapture.Default(false);
            		int priority = __o_priority.Default(0);
            		bool useWeakReference = __o_useWeakReference.Default(false);
            	HX_STACKFRAME(&_hx_pos_c8af1e38a9791aa8_72_addUniqueListener)
HXLINE(  73)		if (this->hasListener(type,listener)) {
HXLINE(  74)			return false;
            		}
HXLINE(  77)		this->addEventListener(type,listener,useCapture,priority,useWeakReference);
HXLINE(  78)		return true;
            	}


HX_DEFINE_DYNAMIC_FUNC5(TweenSprite_obj,addUniqueListener,return )

void TweenSprite_obj::removeEventListener(::String _tmp_type, ::Dynamic _tmp_listener,::hx::Null< bool >  __o_useCapture){
            		bool useCapture = __o_useCapture.Default(false);
            	HX_STACKFRAME(&_hx_pos_c8af1e38a9791aa8_86_removeEventListener)
HXLINE(  88)		::String type = _tmp_type;
HXDLIN(  88)		 ::Dynamic listener = _tmp_listener;
HXDLIN(  88)		if (::hx::IsNotNull( this->_listeners )) {
HXLINE(  89)			if (this->_listeners->exists(type)) {
HXLINE(  89)				( ( ::haxe::ds::List)(this->_listeners->get(type)) )->remove(listener);
            			}
            		}
HXLINE(  92)		this->super::removeEventListener(type,listener,false);
            	}


void TweenSprite_obj::clearEvent(::String type){
            	HX_STACKFRAME(&_hx_pos_c8af1e38a9791aa8_101_clearEvent)
HXDLIN( 101)		if (::hx::IsNotNull( this->_listeners )) {
HXLINE( 102)			 ::haxe::ds::List listeners = ( ( ::haxe::ds::List)(this->_listeners->get(type)) );
HXLINE( 103)			if (::hx::IsNotNull( listeners )) {
HXLINE( 104)				while((listeners->length > 0)){
HXLINE( 105)					this->removeEventListener(type,listeners->first(),null());
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(TweenSprite_obj,clearEvent,(void))

bool TweenSprite_obj::hasListener(::String event, ::Dynamic listener){
            	HX_STACKFRAME(&_hx_pos_c8af1e38a9791aa8_116_hasListener)
HXLINE( 117)		if (::hx::IsNull( this->_listeners )) {
HXLINE( 117)			return false;
            		}
HXLINE( 119)		 ::haxe::ds::List lst = ( ( ::haxe::ds::List)(this->_listeners->get(event)) );
HXLINE( 120)		if (::hx::IsNull( lst )) {
HXLINE( 120)			return false;
            		}
HXLINE( 122)		{
HXLINE( 122)			 ::haxe::ds::_List::ListNode _g_head = lst->h;
HXDLIN( 122)			while(::hx::IsNotNull( _g_head )){
HXLINE( 122)				 ::Dynamic val = _g_head->item;
HXDLIN( 122)				_g_head = _g_head->next;
HXDLIN( 122)				 ::Dynamic l = val;
HXLINE( 123)				if (::hx::IsEq( l,listener )) {
HXLINE( 123)					return true;
            				}
            			}
            		}
HXLINE( 126)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC2(TweenSprite_obj,hasListener,return )

 ::motion::actuators::GenericActuator TweenSprite_obj::tween(Float duration, ::Dynamic properties,::String __o_easing,::hx::Null< bool >  __o_overwrite,::hx::Class customActuator){
            		::String easing = __o_easing;
            		if (::hx::IsNull(__o_easing)) easing = HX_("Linear.easeNone",4f,09,c7,02);
            		bool overwrite = __o_overwrite.Default(true);
            	HX_STACKFRAME(&_hx_pos_c8af1e38a9791aa8_136_tween)
HXDLIN( 136)		::String _hx_switch_0 = easing;
            		if (  (_hx_switch_0==HX_("Back.easeIn",ba,da,15,92)) ){
HXLINE( 154)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Back_obj::easeIn);
HXDLIN( 154)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Back.easeInOut",f4,6d,bc,bc)) ){
HXLINE( 152)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Back_obj::easeInOut);
HXDLIN( 152)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Back.easeOut",19,1c,0e,41)) ){
HXLINE( 153)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Back_obj::easeOut);
HXDLIN( 153)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Bounce.easeIn",79,85,9f,28)) ){
HXLINE( 145)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Bounce_obj::easeIn);
HXDLIN( 145)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Bounce.easeInOut",95,c4,58,fe)) ){
HXLINE( 143)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Bounce_obj::easeInOut);
HXDLIN( 143)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Bounce.easeOut",7a,d8,f9,62)) ){
HXLINE( 144)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Bounce_obj::easeOut);
HXDLIN( 144)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Cubic.easeIn",37,46,de,5b)) ){
HXLINE( 160)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Cubic_obj::easeIn);
HXDLIN( 160)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Cubic.easeInOut",97,8e,68,4c)) ){
HXLINE( 158)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Cubic_obj::easeInOut);
HXDLIN( 158)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Cubic.easeOut",fc,bd,a3,06)) ){
HXLINE( 159)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Cubic_obj::easeOut);
HXDLIN( 159)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Elastic.easeIn",0c,21,b9,79)) ){
HXLINE( 151)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Elastic_obj::easeIn);
HXDLIN( 151)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Elastic.easeInOut",e2,66,1c,78)) ){
HXLINE( 149)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Elastic_obj::easeInOut);
HXDLIN( 149)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Elastic.easeOut",87,5d,48,08)) ){
HXLINE( 150)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Elastic_obj::easeOut);
HXDLIN( 150)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Expo.easeIn",0f,ff,6d,f6)) ){
HXLINE( 142)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Expo_obj::easeIn);
HXDLIN( 142)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Expo.easeInOut",bf,ec,41,a3)) ){
HXLINE( 140)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Expo_obj::easeInOut);
HXDLIN( 140)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Expo.easeOut",24,c2,d5,a9)) ){
HXLINE( 141)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Expo_obj::easeOut);
HXDLIN( 141)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Linear.easeNone",4f,09,c7,02)) ){
HXLINE( 165)			 ::motion::actuators::GenericActuator _hx_tmp = ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator);
HXDLIN( 165)			return _hx_tmp->ease(::motion::easing::Linear_obj::get_easeNone());
HXDLIN( 165)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Quad.easeIn",1a,90,ab,ee)) ){
HXLINE( 139)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Quad_obj::easeIn);
HXDLIN( 139)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Quad.easeInOut",94,54,5a,8e)) ){
HXLINE( 137)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Quad_obj::easeInOut);
HXDLIN( 137)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Quad.easeOut",b9,1a,77,e7)) ){
HXLINE( 138)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Quad_obj::easeOut);
HXDLIN( 138)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Quart.easeIn",22,12,e2,6a)) ){
HXLINE( 157)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Quart_obj::easeIn);
HXDLIN( 157)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Quart.easeInOut",8c,c7,ea,0a)) ){
HXLINE( 155)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Quart_obj::easeInOut);
HXDLIN( 155)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Quart.easeOut",b1,5f,f2,1a)) ){
HXLINE( 156)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Quart_obj::easeOut);
HXDLIN( 156)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Quint.easeIn",16,2d,70,21)) ){
HXLINE( 148)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Quint_obj::easeIn);
HXDLIN( 148)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Quint.easeInOut",18,fd,f0,31)) ){
HXLINE( 146)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Quint_obj::easeInOut);
HXDLIN( 146)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Quint.easeOut",3d,da,bb,20)) ){
HXLINE( 147)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Quint_obj::easeOut);
HXDLIN( 147)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Sine.easeIn",54,8f,5f,dc)) ){
HXLINE( 163)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Sine_obj::easeIn);
HXDLIN( 163)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Sine.easeInOut",9a,15,46,a6)) ){
HXLINE( 161)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Sine_obj::easeInOut);
HXDLIN( 161)			goto _hx_goto_8;
            		}
            		if (  (_hx_switch_0==HX_("Sine.easeOut",3f,6e,42,f7)) ){
HXLINE( 162)			return ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator)->ease(::motion::easing::Sine_obj::easeOut);
HXDLIN( 162)			goto _hx_goto_8;
            		}
            		/* default */{
HXLINE( 166)			 ::motion::actuators::GenericActuator _hx_tmp = ::motion::Actuate_obj::tween(::hx::ObjectPtr<OBJ_>(this),duration,properties,overwrite,customActuator);
HXDLIN( 166)			return _hx_tmp->ease(::motion::easing::Linear_obj::get_easeNone());
            		}
            		_hx_goto_8:;
HXLINE( 136)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC5(TweenSprite_obj,tween,return )

void TweenSprite_obj::tweenStop( ::Dynamic properties,::hx::Null< bool >  __o_complete,::hx::Null< bool >  __o_sendEvent){
            		bool complete = __o_complete.Default(false);
            		bool sendEvent = __o_sendEvent.Default(false);
            	HX_STACKFRAME(&_hx_pos_c8af1e38a9791aa8_176_tweenStop)
HXDLIN( 176)		::motion::Actuate_obj::stop(::hx::ObjectPtr<OBJ_>(this),properties,complete,sendEvent);
            	}


HX_DEFINE_DYNAMIC_FUNC3(TweenSprite_obj,tweenStop,(void))

void TweenSprite_obj::free(::hx::Null< bool >  __o_recursive){
            		bool recursive = __o_recursive.Default(true);
            	HX_STACKFRAME(&_hx_pos_c8af1e38a9791aa8_184_free)
HXLINE( 185)		this->tweenStop(null(),null(),null());
HXLINE( 188)		if (::hx::IsNotNull( this->_listeners )) {
HXLINE( 189)			 ::Dynamic event = this->_listeners->keys();
HXDLIN( 189)			while(( (bool)(event->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE( 189)				::String event1 = ( (::String)(event->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXLINE( 190)				 ::haxe::ds::List listeners = ( ( ::haxe::ds::List)(this->_listeners->get(event1)) );
HXLINE( 191)				while(!(listeners->isEmpty())){
HXLINE( 192)					this->removeEventListener(event1,listeners->first(),null());
            				}
            			}
            		}
HXLINE( 198)		this->freeChildren(recursive);
HXLINE( 201)		if (::hx::IsNotNull( this->parent )) {
HXLINE( 202)			this->parent->removeChild(::hx::ObjectPtr<OBJ_>(this));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(TweenSprite_obj,free,(void))

void TweenSprite_obj::freeChildren(::hx::Null< bool >  __o_recursive){
            		bool recursive = __o_recursive.Default(true);
            	HX_STACKFRAME(&_hx_pos_c8af1e38a9791aa8_210_freeChildren)
HXLINE( 211)		 ::openfl::display::DisplayObject child;
HXLINE( 212)		while((this->get_numChildren() > 0)){
HXLINE( 213)			child = this->removeChildAt(0);
HXLINE( 215)			bool _hx_tmp;
HXDLIN( 215)			if (recursive) {
HXLINE( 215)				_hx_tmp = ::Std_obj::isOfType(child,( ( ::Dynamic)(::hx::ClassOf< ::ru::stablex::TweenSprite >()) ));
            			}
            			else {
HXLINE( 215)				_hx_tmp = false;
            			}
HXDLIN( 215)			if (_hx_tmp) {
HXLINE( 216)				::hx::TCast<  ::ru::stablex::TweenSprite >::cast(child)->free(true);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(TweenSprite_obj,freeChildren,(void))


::hx::ObjectPtr< TweenSprite_obj > TweenSprite_obj::__new() {
	::hx::ObjectPtr< TweenSprite_obj > __this = new TweenSprite_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< TweenSprite_obj > TweenSprite_obj::__alloc(::hx::Ctx *_hx_ctx) {
	TweenSprite_obj *__this = (TweenSprite_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TweenSprite_obj), true, "ru.stablex.TweenSprite"));
	*(void **)__this = TweenSprite_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

TweenSprite_obj::TweenSprite_obj()
{
}

void TweenSprite_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TweenSprite);
	HX_MARK_MEMBER_NAME(_listeners,"_listeners");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void TweenSprite_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_listeners,"_listeners");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val TweenSprite_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"free") ) { return ::hx::Val( free_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"tween") ) { return ::hx::Val( tween_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"tweenStop") ) { return ::hx::Val( tweenStop_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"_listeners") ) { return ::hx::Val( _listeners ); }
		if (HX_FIELD_EQ(inName,"clearEvent") ) { return ::hx::Val( clearEvent_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"hasListener") ) { return ::hx::Val( hasListener_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"freeChildren") ) { return ::hx::Val( freeChildren_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"addEventListener") ) { return ::hx::Val( addEventListener_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"addUniqueListener") ) { return ::hx::Val( addUniqueListener_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"removeEventListener") ) { return ::hx::Val( removeEventListener_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val TweenSprite_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"_listeners") ) { _listeners=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TweenSprite_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_listeners",40,e1,30,4f));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo TweenSprite_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(TweenSprite_obj,_listeners),HX_("_listeners",40,e1,30,4f)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *TweenSprite_obj_sStaticStorageInfo = 0;
#endif

static ::String TweenSprite_obj_sMemberFields[] = {
	HX_("_listeners",40,e1,30,4f),
	HX_("addEventListener",cd,0b,64,f1),
	HX_("addUniqueListener",a6,e6,9b,42),
	HX_("removeEventListener",ca,87,75,55),
	HX_("clearEvent",4d,07,cf,4a),
	HX_("hasListener",ee,e5,e8,0a),
	HX_("tween",6b,aa,70,19),
	HX_("tweenStop",0d,d8,22,83),
	HX_("free",ac,9c,c2,43),
	HX_("freeChildren",0b,fe,0c,f6),
	::String(null()) };

::hx::Class TweenSprite_obj::__mClass;

void TweenSprite_obj::__register()
{
	TweenSprite_obj _hx_dummy;
	TweenSprite_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ru.stablex.TweenSprite",f4,b7,8e,74);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(TweenSprite_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< TweenSprite_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TweenSprite_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TweenSprite_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ru
} // end namespace stablex
