// Generated by Haxe 4.1.1
#ifndef INCLUDED_ru_stablex_ui_misc_SizeTools
#define INCLUDED_ru_stablex_ui_misc_SizeTools

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS4(ru,stablex,ui,misc,SizeTools)

namespace ru{
namespace stablex{
namespace ui{
namespace misc{


class HXCPP_CLASS_ATTRIBUTES SizeTools_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef SizeTools_obj OBJ_;
		SizeTools_obj();

	public:
		enum { _hx_ClassId = 0x3b120300 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="ru.stablex.ui.misc.SizeTools")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"ru.stablex.ui.misc.SizeTools"); }

		inline static ::hx::ObjectPtr< SizeTools_obj > __new() {
			::hx::ObjectPtr< SizeTools_obj > __this = new SizeTools_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< SizeTools_obj > __alloc(::hx::Ctx *_hx_ctx) {
			SizeTools_obj *__this = (SizeTools_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(SizeTools_obj), false, "ru.stablex.ui.misc.SizeTools"));
			*(void **)__this = SizeTools_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~SizeTools_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SizeTools",7a,e5,97,b4); }

		static Float width( ::openfl::display::DisplayObject obj);
		static ::Dynamic width_dyn();

		static Float height( ::openfl::display::DisplayObject obj);
		static ::Dynamic height_dyn();

		static void setX( ::openfl::display::DisplayObject obj,Float x);
		static ::Dynamic setX_dyn();

		static void setY( ::openfl::display::DisplayObject obj,Float y);
		static ::Dynamic setY_dyn();

};

} // end namespace ru
} // end namespace stablex
} // end namespace ui
} // end namespace misc

#endif /* INCLUDED_ru_stablex_ui_misc_SizeTools */ 
